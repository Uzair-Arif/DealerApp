#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Debis Pharma DB")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertDistributor(Distributor instance);
  partial void UpdateDistributor(Distributor instance);
  partial void DeleteDistributor(Distributor instance);
  partial void InsertMedicine_Category(Medicine_Category instance);
  partial void UpdateMedicine_Category(Medicine_Category instance);
  partial void DeleteMedicine_Category(Medicine_Category instance);
  partial void InsertSale(Sale instance);
  partial void UpdateSale(Sale instance);
  partial void DeleteSale(Sale instance);
  partial void InsertRole(Role instance);
  partial void UpdateRole(Role instance);
  partial void DeleteRole(Role instance);
  partial void InsertUser(User instance);
  partial void UpdateUser(User instance);
  partial void DeleteUser(User instance);
  partial void InsertUserActivation(UserActivation instance);
  partial void UpdateUserActivation(UserActivation instance);
  partial void DeleteUserActivation(UserActivation instance);
  partial void InsertSales_Return(Sales_Return instance);
  partial void UpdateSales_Return(Sales_Return instance);
  partial void DeleteSales_Return(Sales_Return instance);
  partial void InsertPurchase(Purchase instance);
  partial void UpdatePurchase(Purchase instance);
  partial void DeletePurchase(Purchase instance);
  partial void InsertOrder_To_Medicine_Company(Order_To_Medicine_Company instance);
  partial void UpdateOrder_To_Medicine_Company(Order_To_Medicine_Company instance);
  partial void DeleteOrder_To_Medicine_Company(Order_To_Medicine_Company instance);
  partial void InsertPurchase_Return(Purchase_Return instance);
  partial void UpdatePurchase_Return(Purchase_Return instance);
  partial void DeletePurchase_Return(Purchase_Return instance);
  partial void InsertSales_Invoice(Sales_Invoice instance);
  partial void UpdateSales_Invoice(Sales_Invoice instance);
  partial void DeleteSales_Invoice(Sales_Invoice instance);
  partial void InsertSales_Return_Invoice(Sales_Return_Invoice instance);
  partial void UpdateSales_Return_Invoice(Sales_Return_Invoice instance);
  partial void DeleteSales_Return_Invoice(Sales_Return_Invoice instance);
  partial void InsertOrder_by_Medical_Store_Per_Medicine(Order_by_Medical_Store_Per_Medicine instance);
  partial void UpdateOrder_by_Medical_Store_Per_Medicine(Order_by_Medical_Store_Per_Medicine instance);
  partial void DeleteOrder_by_Medical_Store_Per_Medicine(Order_by_Medical_Store_Per_Medicine instance);
  partial void InsertPurchase_Invoice(Purchase_Invoice instance);
  partial void UpdatePurchase_Invoice(Purchase_Invoice instance);
  partial void DeletePurchase_Invoice(Purchase_Invoice instance);
  partial void InsertOrder_To_Medicine_Company_Per_Medicine(Order_To_Medicine_Company_Per_Medicine instance);
  partial void UpdateOrder_To_Medicine_Company_Per_Medicine(Order_To_Medicine_Company_Per_Medicine instance);
  partial void DeleteOrder_To_Medicine_Company_Per_Medicine(Order_To_Medicine_Company_Per_Medicine instance);
  partial void InsertPurchase_Return_Invoice(Purchase_Return_Invoice instance);
  partial void UpdatePurchase_Return_Invoice(Purchase_Return_Invoice instance);
  partial void DeletePurchase_Return_Invoice(Purchase_Return_Invoice instance);
  partial void InsertNotification(Notification instance);
  partial void UpdateNotification(Notification instance);
  partial void DeleteNotification(Notification instance);
  partial void InsertTransaction(Transaction instance);
  partial void UpdateTransaction(Transaction instance);
  partial void DeleteTransaction(Transaction instance);
  partial void InsertOrder_By_Medical_Store(Order_By_Medical_Store instance);
  partial void UpdateOrder_By_Medical_Store(Order_By_Medical_Store instance);
  partial void DeleteOrder_By_Medical_Store(Order_By_Medical_Store instance);
  partial void InsertChart(Chart instance);
  partial void UpdateChart(Chart instance);
  partial void DeleteChart(Chart instance);
  partial void InsertMedicine_Company(Medicine_Company instance);
  partial void UpdateMedicine_Company(Medicine_Company instance);
  partial void DeleteMedicine_Company(Medicine_Company instance);
  partial void InsertMedical_Store(Medical_Store instance);
  partial void UpdateMedical_Store(Medical_Store instance);
  partial void DeleteMedical_Store(Medical_Store instance);
  partial void InsertMedicine_In_Stock(Medicine_In_Stock instance);
  partial void UpdateMedicine_In_Stock(Medicine_In_Stock instance);
  partial void DeleteMedicine_In_Stock(Medicine_In_Stock instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Debis_Pharma_DBConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Distributor> Distributors
	{
		get
		{
			return this.GetTable<Distributor>();
		}
	}
	
	public System.Data.Linq.Table<Medicine_Category> Medicine_Categories
	{
		get
		{
			return this.GetTable<Medicine_Category>();
		}
	}
	
	public System.Data.Linq.Table<Sale> Sales
	{
		get
		{
			return this.GetTable<Sale>();
		}
	}
	
	public System.Data.Linq.Table<Role> Roles
	{
		get
		{
			return this.GetTable<Role>();
		}
	}
	
	public System.Data.Linq.Table<User> Users
	{
		get
		{
			return this.GetTable<User>();
		}
	}
	
	public System.Data.Linq.Table<UserActivation> UserActivations
	{
		get
		{
			return this.GetTable<UserActivation>();
		}
	}
	
	public System.Data.Linq.Table<Sales_Return> Sales_Returns
	{
		get
		{
			return this.GetTable<Sales_Return>();
		}
	}
	
	public System.Data.Linq.Table<Purchase> Purchases
	{
		get
		{
			return this.GetTable<Purchase>();
		}
	}
	
	public System.Data.Linq.Table<Order_To_Medicine_Company> Order_To_Medicine_Companies
	{
		get
		{
			return this.GetTable<Order_To_Medicine_Company>();
		}
	}
	
	public System.Data.Linq.Table<Purchase_Return> Purchase_Returns
	{
		get
		{
			return this.GetTable<Purchase_Return>();
		}
	}
	
	public System.Data.Linq.Table<Sales_Invoice> Sales_Invoices
	{
		get
		{
			return this.GetTable<Sales_Invoice>();
		}
	}
	
	public System.Data.Linq.Table<Sales_Return_Invoice> Sales_Return_Invoices
	{
		get
		{
			return this.GetTable<Sales_Return_Invoice>();
		}
	}
	
	public System.Data.Linq.Table<Order_by_Medical_Store_Per_Medicine> Order_by_Medical_Store_Per_Medicines
	{
		get
		{
			return this.GetTable<Order_by_Medical_Store_Per_Medicine>();
		}
	}
	
	public System.Data.Linq.Table<Purchase_Invoice> Purchase_Invoices
	{
		get
		{
			return this.GetTable<Purchase_Invoice>();
		}
	}
	
	public System.Data.Linq.Table<Order_To_Medicine_Company_Per_Medicine> Order_To_Medicine_Company_Per_Medicines
	{
		get
		{
			return this.GetTable<Order_To_Medicine_Company_Per_Medicine>();
		}
	}
	
	public System.Data.Linq.Table<Purchase_Return_Invoice> Purchase_Return_Invoices
	{
		get
		{
			return this.GetTable<Purchase_Return_Invoice>();
		}
	}
	
	public System.Data.Linq.Table<Notification> Notifications
	{
		get
		{
			return this.GetTable<Notification>();
		}
	}
	
	public System.Data.Linq.Table<Transaction> Transactions
	{
		get
		{
			return this.GetTable<Transaction>();
		}
	}
	
	public System.Data.Linq.Table<Order_By_Medical_Store> Order_By_Medical_Stores
	{
		get
		{
			return this.GetTable<Order_By_Medical_Store>();
		}
	}
	
	public System.Data.Linq.Table<Chart> Charts
	{
		get
		{
			return this.GetTable<Chart>();
		}
	}
	
	public System.Data.Linq.Table<Medicine_Company> Medicine_Companies
	{
		get
		{
			return this.GetTable<Medicine_Company>();
		}
	}
	
	public System.Data.Linq.Table<Medical_Store> Medical_Stores
	{
		get
		{
			return this.GetTable<Medical_Store>();
		}
	}
	
	public System.Data.Linq.Table<Medicine_In_Stock> Medicine_In_Stocks
	{
		get
		{
			return this.GetTable<Medicine_In_Stock>();
		}
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetMedicineCategory")]
	public ISingleResult<GetMedicineCategoryResult> GetMedicineCategory()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<GetMedicineCategoryResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetMedicineCategoryID")]
	public int GetMedicineCategoryID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedicineCategoryName", DbType="NVarChar(50)")] string medicineCategoryName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedicineCategoryID", DbType="Int")] ref System.Nullable<int> medicineCategoryID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), medicineCategoryName, medicineCategoryID);
		medicineCategoryID = ((System.Nullable<int>)(result.GetParameterValue(1)));
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetMedicineCompanyID")]
	public int GetMedicineCompanyID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedicineCompanyName", DbType="NVarChar(50)")] string medicineCompanyName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedicineCompanyID", DbType="Int")] ref System.Nullable<int> medicineCompanyID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), medicineCompanyName, medicineCompanyID);
		medicineCompanyID = ((System.Nullable<int>)(result.GetParameterValue(1)));
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetMedicalStoreID")]
	public int GetMedicalStoreID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedicalStoreName", DbType="NVarChar(50)")] string medicalStoreName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedicalStoreID", DbType="Int")] ref System.Nullable<int> medicalStoreID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), medicalStoreName, medicalStoreID);
		medicalStoreID = ((System.Nullable<int>)(result.GetParameterValue(1)));
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetMedicineID")]
	public int GetMedicineID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedicineName", DbType="NVarChar(50)")] string medicineName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedicineID", DbType="Int")] ref System.Nullable<int> medicineID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), medicineName, medicineID);
		medicineID = ((System.Nullable<int>)(result.GetParameterValue(1)));
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Insert_User")]
	public ISingleResult<Insert_UserResult> Insert_User([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Username", DbType="NVarChar(20)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(20)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(30)")] string email)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, password, email);
		return ((ISingleResult<Insert_UserResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetMedicine")]
	public ISingleResult<GetMedicineResult> GetMedicine()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<GetMedicineResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetMedicineIDByBatch")]
	public int GetMedicineIDByBatch([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BatchNo", DbType="NVarChar(50)")] string batchNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedicineID", DbType="Int")] ref System.Nullable<int> medicineID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), batchNo, medicineID);
		medicineID = ((System.Nullable<int>)(result.GetParameterValue(1)));
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetMaxMedicineID")]
	public int GetMaxMedicineID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedicineName", DbType="NVarChar(50)")] string medicineName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedicineID", DbType="Int")] ref System.Nullable<int> medicineID)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), medicineName, medicineID);
		medicineID = ((System.Nullable<int>)(result.GetParameterValue(1)));
		return ((int)(result.ReturnValue));
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Distributor")]
public partial class Distributor : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _Id;
	
	private string _Name;
	
	private string _Address;
	
	private string _Phone;
	
	private string _Mobile;
	
	private string _Email;
	
	private string _Alternative_Mobile;
	
	private string _Alternative_Email;
	
	private string _Fax;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAlternative_MobileChanging(string value);
    partial void OnAlternative_MobileChanged();
    partial void OnAlternative_EmailChanging(string value);
    partial void OnAlternative_EmailChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    #endregion
	
	public Distributor()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public decimal Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(50)")]
	public string Mobile
	{
		get
		{
			return this._Mobile;
		}
		set
		{
			if ((this._Mobile != value))
			{
				this.OnMobileChanging(value);
				this.SendPropertyChanging();
				this._Mobile = value;
				this.SendPropertyChanged("Mobile");
				this.OnMobileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Alternative Mobile]", Storage="_Alternative_Mobile", DbType="NVarChar(50)")]
	public string Alternative_Mobile
	{
		get
		{
			return this._Alternative_Mobile;
		}
		set
		{
			if ((this._Alternative_Mobile != value))
			{
				this.OnAlternative_MobileChanging(value);
				this.SendPropertyChanging();
				this._Alternative_Mobile = value;
				this.SendPropertyChanged("Alternative_Mobile");
				this.OnAlternative_MobileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Alternative Email]", Storage="_Alternative_Email", DbType="NVarChar(50)")]
	public string Alternative_Email
	{
		get
		{
			return this._Alternative_Email;
		}
		set
		{
			if ((this._Alternative_Email != value))
			{
				this.OnAlternative_EmailChanging(value);
				this.SendPropertyChanging();
				this._Alternative_Email = value;
				this.SendPropertyChanged("Alternative_Email");
				this.OnAlternative_EmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50)")]
	public string Fax
	{
		get
		{
			return this._Fax;
		}
		set
		{
			if ((this._Fax != value))
			{
				this.OnFaxChanging(value);
				this.SendPropertyChanging();
				this._Fax = value;
				this.SendPropertyChanged("Fax");
				this.OnFaxChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Medicine_Category")]
public partial class Medicine_Category : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _MedicineCategoryID;
	
	private string _MedicineCategoryName;
	
	private EntitySet<Medicine_In_Stock> _Medicine_In_Stocks;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMedicineCategoryIDChanging(decimal value);
    partial void OnMedicineCategoryIDChanged();
    partial void OnMedicineCategoryNameChanging(string value);
    partial void OnMedicineCategoryNameChanged();
    #endregion
	
	public Medicine_Category()
	{
		this._Medicine_In_Stocks = new EntitySet<Medicine_In_Stock>(new Action<Medicine_In_Stock>(this.attach_Medicine_In_Stocks), new Action<Medicine_In_Stock>(this.detach_Medicine_In_Stocks));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineCategoryID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public decimal MedicineCategoryID
	{
		get
		{
			return this._MedicineCategoryID;
		}
		set
		{
			if ((this._MedicineCategoryID != value))
			{
				this.OnMedicineCategoryIDChanging(value);
				this.SendPropertyChanging();
				this._MedicineCategoryID = value;
				this.SendPropertyChanged("MedicineCategoryID");
				this.OnMedicineCategoryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineCategoryName", DbType="NVarChar(50)")]
	public string MedicineCategoryName
	{
		get
		{
			return this._MedicineCategoryName;
		}
		set
		{
			if ((this._MedicineCategoryName != value))
			{
				this.OnMedicineCategoryNameChanging(value);
				this.SendPropertyChanging();
				this._MedicineCategoryName = value;
				this.SendPropertyChanged("MedicineCategoryName");
				this.OnMedicineCategoryNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Medicine_Category_Medicine_In_Stock", Storage="_Medicine_In_Stocks", ThisKey="MedicineCategoryID", OtherKey="MedicineCategoryID")]
	public EntitySet<Medicine_In_Stock> Medicine_In_Stocks
	{
		get
		{
			return this._Medicine_In_Stocks;
		}
		set
		{
			this._Medicine_In_Stocks.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Medicine_In_Stocks(Medicine_In_Stock entity)
	{
		this.SendPropertyChanging();
		entity.Medicine_Category = this;
	}
	
	private void detach_Medicine_In_Stocks(Medicine_In_Stock entity)
	{
		this.SendPropertyChanging();
		entity.Medicine_Category = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sales")]
public partial class Sale : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _SaleID;
	
	private System.Nullable<System.DateTime> _Date;
	
	private System.Nullable<decimal> _OrderIDByMS;
	
	private EntitySet<Sales_Return> _Sales_Returns;
	
	private EntitySet<Sales_Invoice> _Sales_Invoices;
	
	private EntityRef<Order_By_Medical_Store> _Order_By_Medical_Store;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSaleIDChanging(decimal value);
    partial void OnSaleIDChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnOrderIDByMSChanging(System.Nullable<decimal> value);
    partial void OnOrderIDByMSChanged();
    #endregion
	
	public Sale()
	{
		this._Sales_Returns = new EntitySet<Sales_Return>(new Action<Sales_Return>(this.attach_Sales_Returns), new Action<Sales_Return>(this.detach_Sales_Returns));
		this._Sales_Invoices = new EntitySet<Sales_Invoice>(new Action<Sales_Invoice>(this.attach_Sales_Invoices), new Action<Sales_Invoice>(this.detach_Sales_Invoices));
		this._Order_By_Medical_Store = default(EntityRef<Order_By_Medical_Store>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public decimal SaleID
	{
		get
		{
			return this._SaleID;
		}
		set
		{
			if ((this._SaleID != value))
			{
				this.OnSaleIDChanging(value);
				this.SendPropertyChanging();
				this._SaleID = value;
				this.SendPropertyChanged("SaleID");
				this.OnSaleIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderIDByMS", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> OrderIDByMS
	{
		get
		{
			return this._OrderIDByMS;
		}
		set
		{
			if ((this._OrderIDByMS != value))
			{
				if (this._Order_By_Medical_Store.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnOrderIDByMSChanging(value);
				this.SendPropertyChanging();
				this._OrderIDByMS = value;
				this.SendPropertyChanged("OrderIDByMS");
				this.OnOrderIDByMSChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sale_Sales_Return", Storage="_Sales_Returns", ThisKey="SaleID", OtherKey="SaleID")]
	public EntitySet<Sales_Return> Sales_Returns
	{
		get
		{
			return this._Sales_Returns;
		}
		set
		{
			this._Sales_Returns.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sale_Sales_Invoice", Storage="_Sales_Invoices", ThisKey="SaleID", OtherKey="SaleID")]
	public EntitySet<Sales_Invoice> Sales_Invoices
	{
		get
		{
			return this._Sales_Invoices;
		}
		set
		{
			this._Sales_Invoices.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_By_Medical_Store_Sale", Storage="_Order_By_Medical_Store", ThisKey="OrderIDByMS", OtherKey="OrderIDByMS", IsForeignKey=true)]
	public Order_By_Medical_Store Order_By_Medical_Store
	{
		get
		{
			return this._Order_By_Medical_Store.Entity;
		}
		set
		{
			Order_By_Medical_Store previousValue = this._Order_By_Medical_Store.Entity;
			if (((previousValue != value) 
						|| (this._Order_By_Medical_Store.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Order_By_Medical_Store.Entity = null;
					previousValue.Sales.Remove(this);
				}
				this._Order_By_Medical_Store.Entity = value;
				if ((value != null))
				{
					value.Sales.Add(this);
					this._OrderIDByMS = value.OrderIDByMS;
				}
				else
				{
					this._OrderIDByMS = default(Nullable<decimal>);
				}
				this.SendPropertyChanged("Order_By_Medical_Store");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Sales_Returns(Sales_Return entity)
	{
		this.SendPropertyChanging();
		entity.Sale = this;
	}
	
	private void detach_Sales_Returns(Sales_Return entity)
	{
		this.SendPropertyChanging();
		entity.Sale = null;
	}
	
	private void attach_Sales_Invoices(Sales_Invoice entity)
	{
		this.SendPropertyChanging();
		entity.Sale = this;
	}
	
	private void detach_Sales_Invoices(Sales_Invoice entity)
	{
		this.SendPropertyChanging();
		entity.Sale = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _RoleId;
	
	private string _RoleName;
	
	private EntitySet<User> _Users;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    #endregion
	
	public Role()
	{
		this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int RoleId
	{
		get
		{
			return this._RoleId;
		}
		set
		{
			if ((this._RoleId != value))
			{
				this.OnRoleIdChanging(value);
				this.SendPropertyChanging();
				this._RoleId = value;
				this.SendPropertyChanged("RoleId");
				this.OnRoleIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50)")]
	public string RoleName
	{
		get
		{
			return this._RoleName;
		}
		set
		{
			if ((this._RoleName != value))
			{
				this.OnRoleNameChanging(value);
				this.SendPropertyChanging();
				this._RoleName = value;
				this.SendPropertyChanged("RoleName");
				this.OnRoleNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User", Storage="_Users", ThisKey="RoleId", OtherKey="RoleId")]
	public EntitySet<User> Users
	{
		get
		{
			return this._Users;
		}
		set
		{
			this._Users.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Users(User entity)
	{
		this.SendPropertyChanging();
		entity.Role = this;
	}
	
	private void detach_Users(User entity)
	{
		this.SendPropertyChanging();
		entity.Role = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _UserId;
	
	private string _Username;
	
	private string _Password;
	
	private string _Email;
	
	private System.DateTime _CreatedDate;
	
	private System.Nullable<System.DateTime> _LastLoginDate;
	
	private System.Nullable<int> _RoleId;
	
	private EntityRef<UserActivation> _UserActivation;
	
	private EntitySet<Notification> _Notifications;
	
	private EntityRef<Role> _Role;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnLastLoginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginDateChanged();
    partial void OnRoleIdChanging(System.Nullable<int> value);
    partial void OnRoleIdChanged();
    #endregion
	
	public User()
	{
		this._UserActivation = default(EntityRef<UserActivation>);
		this._Notifications = new EntitySet<Notification>(new Action<Notification>(this.attach_Notifications), new Action<Notification>(this.detach_Notifications));
		this._Role = default(EntityRef<Role>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Username
	{
		get
		{
			return this._Username;
		}
		set
		{
			if ((this._Username != value))
			{
				this.OnUsernameChanging(value);
				this.SendPropertyChanging();
				this._Username = value;
				this.SendPropertyChanged("Username");
				this.OnUsernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
	public System.DateTime CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> LastLoginDate
	{
		get
		{
			return this._LastLoginDate;
		}
		set
		{
			if ((this._LastLoginDate != value))
			{
				this.OnLastLoginDateChanging(value);
				this.SendPropertyChanging();
				this._LastLoginDate = value;
				this.SendPropertyChanged("LastLoginDate");
				this.OnLastLoginDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int")]
	public System.Nullable<int> RoleId
	{
		get
		{
			return this._RoleId;
		}
		set
		{
			if ((this._RoleId != value))
			{
				if (this._Role.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRoleIdChanging(value);
				this.SendPropertyChanging();
				this._RoleId = value;
				this.SendPropertyChanged("RoleId");
				this.OnRoleIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserActivation", Storage="_UserActivation", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
	public UserActivation UserActivation
	{
		get
		{
			return this._UserActivation.Entity;
		}
		set
		{
			UserActivation previousValue = this._UserActivation.Entity;
			if (((previousValue != value) 
						|| (this._UserActivation.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserActivation.Entity = null;
					previousValue.User = null;
				}
				this._UserActivation.Entity = value;
				if ((value != null))
				{
					value.User = this;
				}
				this.SendPropertyChanged("UserActivation");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Notification", Storage="_Notifications", ThisKey="UserId", OtherKey="UserID")]
	public EntitySet<Notification> Notifications
	{
		get
		{
			return this._Notifications;
		}
		set
		{
			this._Notifications.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User", Storage="_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
	public Role Role
	{
		get
		{
			return this._Role.Entity;
		}
		set
		{
			Role previousValue = this._Role.Entity;
			if (((previousValue != value) 
						|| (this._Role.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Role.Entity = null;
					previousValue.Users.Remove(this);
				}
				this._Role.Entity = value;
				if ((value != null))
				{
					value.Users.Add(this);
					this._RoleId = value.RoleId;
				}
				else
				{
					this._RoleId = default(Nullable<int>);
				}
				this.SendPropertyChanged("Role");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Notifications(Notification entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_Notifications(Notification entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserActivation")]
public partial class UserActivation : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _UserId;
	
	private System.Nullable<System.Guid> _ActivationCode;
	
	private EntityRef<User> _User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnActivationCodeChanging(System.Nullable<System.Guid> value);
    partial void OnActivationCodeChanged();
    #endregion
	
	public UserActivation()
	{
		this._User = default(EntityRef<User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationCode", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> ActivationCode
	{
		get
		{
			return this._ActivationCode;
		}
		set
		{
			if ((this._ActivationCode != value))
			{
				this.OnActivationCodeChanging(value);
				this.SendPropertyChanging();
				this._ActivationCode = value;
				this.SendPropertyChanged("ActivationCode");
				this.OnActivationCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserActivation", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.UserActivation = null;
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.UserActivation = this;
					this._UserId = value.UserId;
				}
				else
				{
					this._UserId = default(int);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sales_Return")]
public partial class Sales_Return : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _SaleReturnID;
	
	private System.Nullable<System.DateTime> _ReturnDate;
	
	private System.Nullable<decimal> _SaleID;
	
	private System.Nullable<decimal> _ReturnAmount;
	
	private EntitySet<Sales_Return_Invoice> _Sales_Return_Invoices;
	
	private EntityRef<Sale> _Sale;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSaleReturnIDChanging(decimal value);
    partial void OnSaleReturnIDChanged();
    partial void OnReturnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReturnDateChanged();
    partial void OnSaleIDChanging(System.Nullable<decimal> value);
    partial void OnSaleIDChanged();
    partial void OnReturnAmountChanging(System.Nullable<decimal> value);
    partial void OnReturnAmountChanged();
    #endregion
	
	public Sales_Return()
	{
		this._Sales_Return_Invoices = new EntitySet<Sales_Return_Invoice>(new Action<Sales_Return_Invoice>(this.attach_Sales_Return_Invoices), new Action<Sales_Return_Invoice>(this.detach_Sales_Return_Invoices));
		this._Sale = default(EntityRef<Sale>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleReturnID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public decimal SaleReturnID
	{
		get
		{
			return this._SaleReturnID;
		}
		set
		{
			if ((this._SaleReturnID != value))
			{
				this.OnSaleReturnIDChanging(value);
				this.SendPropertyChanging();
				this._SaleReturnID = value;
				this.SendPropertyChanged("SaleReturnID");
				this.OnSaleReturnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnDate", DbType="Date")]
	public System.Nullable<System.DateTime> ReturnDate
	{
		get
		{
			return this._ReturnDate;
		}
		set
		{
			if ((this._ReturnDate != value))
			{
				this.OnReturnDateChanging(value);
				this.SendPropertyChanging();
				this._ReturnDate = value;
				this.SendPropertyChanged("ReturnDate");
				this.OnReturnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleID", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> SaleID
	{
		get
		{
			return this._SaleID;
		}
		set
		{
			if ((this._SaleID != value))
			{
				if (this._Sale.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSaleIDChanging(value);
				this.SendPropertyChanging();
				this._SaleID = value;
				this.SendPropertyChanged("SaleID");
				this.OnSaleIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnAmount", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> ReturnAmount
	{
		get
		{
			return this._ReturnAmount;
		}
		set
		{
			if ((this._ReturnAmount != value))
			{
				this.OnReturnAmountChanging(value);
				this.SendPropertyChanging();
				this._ReturnAmount = value;
				this.SendPropertyChanged("ReturnAmount");
				this.OnReturnAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sales_Return_Sales_Return_Invoice", Storage="_Sales_Return_Invoices", ThisKey="SaleReturnID", OtherKey="SaleReturnID")]
	public EntitySet<Sales_Return_Invoice> Sales_Return_Invoices
	{
		get
		{
			return this._Sales_Return_Invoices;
		}
		set
		{
			this._Sales_Return_Invoices.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sale_Sales_Return", Storage="_Sale", ThisKey="SaleID", OtherKey="SaleID", IsForeignKey=true)]
	public Sale Sale
	{
		get
		{
			return this._Sale.Entity;
		}
		set
		{
			Sale previousValue = this._Sale.Entity;
			if (((previousValue != value) 
						|| (this._Sale.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sale.Entity = null;
					previousValue.Sales_Returns.Remove(this);
				}
				this._Sale.Entity = value;
				if ((value != null))
				{
					value.Sales_Returns.Add(this);
					this._SaleID = value.SaleID;
				}
				else
				{
					this._SaleID = default(Nullable<decimal>);
				}
				this.SendPropertyChanged("Sale");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Sales_Return_Invoices(Sales_Return_Invoice entity)
	{
		this.SendPropertyChanging();
		entity.Sales_Return = this;
	}
	
	private void detach_Sales_Return_Invoices(Sales_Return_Invoice entity)
	{
		this.SendPropertyChanging();
		entity.Sales_Return = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Purchase")]
public partial class Purchase : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _PurchaseID;
	
	private System.Nullable<System.DateTime> _Date;
	
	private System.Nullable<decimal> _OrderIDToMC;
	
	private EntitySet<Purchase_Return> _Purchase_Returns;
	
	private EntitySet<Purchase_Invoice> _Purchase_Invoices;
	
	private EntityRef<Order_To_Medicine_Company> _Order_To_Medicine_Company;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseIDChanging(decimal value);
    partial void OnPurchaseIDChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnOrderIDToMCChanging(System.Nullable<decimal> value);
    partial void OnOrderIDToMCChanged();
    #endregion
	
	public Purchase()
	{
		this._Purchase_Returns = new EntitySet<Purchase_Return>(new Action<Purchase_Return>(this.attach_Purchase_Returns), new Action<Purchase_Return>(this.detach_Purchase_Returns));
		this._Purchase_Invoices = new EntitySet<Purchase_Invoice>(new Action<Purchase_Invoice>(this.attach_Purchase_Invoices), new Action<Purchase_Invoice>(this.detach_Purchase_Invoices));
		this._Order_To_Medicine_Company = default(EntityRef<Order_To_Medicine_Company>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public decimal PurchaseID
	{
		get
		{
			return this._PurchaseID;
		}
		set
		{
			if ((this._PurchaseID != value))
			{
				this.OnPurchaseIDChanging(value);
				this.SendPropertyChanging();
				this._PurchaseID = value;
				this.SendPropertyChanged("PurchaseID");
				this.OnPurchaseIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderIDToMC", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> OrderIDToMC
	{
		get
		{
			return this._OrderIDToMC;
		}
		set
		{
			if ((this._OrderIDToMC != value))
			{
				if (this._Order_To_Medicine_Company.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnOrderIDToMCChanging(value);
				this.SendPropertyChanging();
				this._OrderIDToMC = value;
				this.SendPropertyChanged("OrderIDToMC");
				this.OnOrderIDToMCChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Purchase_Purchase_Return", Storage="_Purchase_Returns", ThisKey="PurchaseID", OtherKey="PurchaseID")]
	public EntitySet<Purchase_Return> Purchase_Returns
	{
		get
		{
			return this._Purchase_Returns;
		}
		set
		{
			this._Purchase_Returns.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Purchase_Purchase_Invoice", Storage="_Purchase_Invoices", ThisKey="PurchaseID", OtherKey="PurchaseID")]
	public EntitySet<Purchase_Invoice> Purchase_Invoices
	{
		get
		{
			return this._Purchase_Invoices;
		}
		set
		{
			this._Purchase_Invoices.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_To_Medicine_Company_Purchase", Storage="_Order_To_Medicine_Company", ThisKey="OrderIDToMC", OtherKey="OrderIDToMC", IsForeignKey=true)]
	public Order_To_Medicine_Company Order_To_Medicine_Company
	{
		get
		{
			return this._Order_To_Medicine_Company.Entity;
		}
		set
		{
			Order_To_Medicine_Company previousValue = this._Order_To_Medicine_Company.Entity;
			if (((previousValue != value) 
						|| (this._Order_To_Medicine_Company.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Order_To_Medicine_Company.Entity = null;
					previousValue.Purchases.Remove(this);
				}
				this._Order_To_Medicine_Company.Entity = value;
				if ((value != null))
				{
					value.Purchases.Add(this);
					this._OrderIDToMC = value.OrderIDToMC;
				}
				else
				{
					this._OrderIDToMC = default(Nullable<decimal>);
				}
				this.SendPropertyChanged("Order_To_Medicine_Company");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Purchase_Returns(Purchase_Return entity)
	{
		this.SendPropertyChanging();
		entity.Purchase = this;
	}
	
	private void detach_Purchase_Returns(Purchase_Return entity)
	{
		this.SendPropertyChanging();
		entity.Purchase = null;
	}
	
	private void attach_Purchase_Invoices(Purchase_Invoice entity)
	{
		this.SendPropertyChanging();
		entity.Purchase = this;
	}
	
	private void detach_Purchase_Invoices(Purchase_Invoice entity)
	{
		this.SendPropertyChanging();
		entity.Purchase = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Order_To_Medicine_Company")]
public partial class Order_To_Medicine_Company : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _OrderIDToMC;
	
	private System.Nullable<System.DateTime> _Due_Date;
	
	private string _Status;
	
	private System.Nullable<decimal> _MedicineCompanyID;
	
	private System.Nullable<System.DateTime> _Order_Date;
	
	private string _Placed_By;
	
	private EntitySet<Purchase> _Purchases;
	
	private EntitySet<Order_To_Medicine_Company_Per_Medicine> _Order_To_Medicine_Company_Per_Medicines;
	
	private EntityRef<Medicine_Company> _Medicine_Company;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDToMCChanging(decimal value);
    partial void OnOrderIDToMCChanged();
    partial void OnDue_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnDue_DateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnMedicineCompanyIDChanging(System.Nullable<decimal> value);
    partial void OnMedicineCompanyIDChanged();
    partial void OnOrder_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnOrder_DateChanged();
    partial void OnPlaced_ByChanging(string value);
    partial void OnPlaced_ByChanged();
    #endregion
	
	public Order_To_Medicine_Company()
	{
		this._Purchases = new EntitySet<Purchase>(new Action<Purchase>(this.attach_Purchases), new Action<Purchase>(this.detach_Purchases));
		this._Order_To_Medicine_Company_Per_Medicines = new EntitySet<Order_To_Medicine_Company_Per_Medicine>(new Action<Order_To_Medicine_Company_Per_Medicine>(this.attach_Order_To_Medicine_Company_Per_Medicines), new Action<Order_To_Medicine_Company_Per_Medicine>(this.detach_Order_To_Medicine_Company_Per_Medicines));
		this._Medicine_Company = default(EntityRef<Medicine_Company>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderIDToMC", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public decimal OrderIDToMC
	{
		get
		{
			return this._OrderIDToMC;
		}
		set
		{
			if ((this._OrderIDToMC != value))
			{
				this.OnOrderIDToMCChanging(value);
				this.SendPropertyChanging();
				this._OrderIDToMC = value;
				this.SendPropertyChanged("OrderIDToMC");
				this.OnOrderIDToMCChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Due Date]", Storage="_Due_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Due_Date
	{
		get
		{
			return this._Due_Date;
		}
		set
		{
			if ((this._Due_Date != value))
			{
				this.OnDue_DateChanging(value);
				this.SendPropertyChanging();
				this._Due_Date = value;
				this.SendPropertyChanged("Due_Date");
				this.OnDue_DateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
	public string Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineCompanyID", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> MedicineCompanyID
	{
		get
		{
			return this._MedicineCompanyID;
		}
		set
		{
			if ((this._MedicineCompanyID != value))
			{
				if (this._Medicine_Company.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMedicineCompanyIDChanging(value);
				this.SendPropertyChanging();
				this._MedicineCompanyID = value;
				this.SendPropertyChanged("MedicineCompanyID");
				this.OnMedicineCompanyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order Date]", Storage="_Order_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Order_Date
	{
		get
		{
			return this._Order_Date;
		}
		set
		{
			if ((this._Order_Date != value))
			{
				this.OnOrder_DateChanging(value);
				this.SendPropertyChanging();
				this._Order_Date = value;
				this.SendPropertyChanged("Order_Date");
				this.OnOrder_DateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Placed By]", Storage="_Placed_By", DbType="NVarChar(50)")]
	public string Placed_By
	{
		get
		{
			return this._Placed_By;
		}
		set
		{
			if ((this._Placed_By != value))
			{
				this.OnPlaced_ByChanging(value);
				this.SendPropertyChanging();
				this._Placed_By = value;
				this.SendPropertyChanged("Placed_By");
				this.OnPlaced_ByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_To_Medicine_Company_Purchase", Storage="_Purchases", ThisKey="OrderIDToMC", OtherKey="OrderIDToMC")]
	public EntitySet<Purchase> Purchases
	{
		get
		{
			return this._Purchases;
		}
		set
		{
			this._Purchases.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_To_Medicine_Company_Order_To_Medicine_Company_Per_Medicine", Storage="_Order_To_Medicine_Company_Per_Medicines", ThisKey="OrderIDToMC", OtherKey="OrderIDToMC")]
	public EntitySet<Order_To_Medicine_Company_Per_Medicine> Order_To_Medicine_Company_Per_Medicines
	{
		get
		{
			return this._Order_To_Medicine_Company_Per_Medicines;
		}
		set
		{
			this._Order_To_Medicine_Company_Per_Medicines.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Medicine_Company_Order_To_Medicine_Company", Storage="_Medicine_Company", ThisKey="MedicineCompanyID", OtherKey="MedicineCompanyID", IsForeignKey=true)]
	public Medicine_Company Medicine_Company
	{
		get
		{
			return this._Medicine_Company.Entity;
		}
		set
		{
			Medicine_Company previousValue = this._Medicine_Company.Entity;
			if (((previousValue != value) 
						|| (this._Medicine_Company.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Medicine_Company.Entity = null;
					previousValue.Order_To_Medicine_Companies.Remove(this);
				}
				this._Medicine_Company.Entity = value;
				if ((value != null))
				{
					value.Order_To_Medicine_Companies.Add(this);
					this._MedicineCompanyID = value.MedicineCompanyID;
				}
				else
				{
					this._MedicineCompanyID = default(Nullable<decimal>);
				}
				this.SendPropertyChanged("Medicine_Company");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Purchases(Purchase entity)
	{
		this.SendPropertyChanging();
		entity.Order_To_Medicine_Company = this;
	}
	
	private void detach_Purchases(Purchase entity)
	{
		this.SendPropertyChanging();
		entity.Order_To_Medicine_Company = null;
	}
	
	private void attach_Order_To_Medicine_Company_Per_Medicines(Order_To_Medicine_Company_Per_Medicine entity)
	{
		this.SendPropertyChanging();
		entity.Order_To_Medicine_Company = this;
	}
	
	private void detach_Order_To_Medicine_Company_Per_Medicines(Order_To_Medicine_Company_Per_Medicine entity)
	{
		this.SendPropertyChanging();
		entity.Order_To_Medicine_Company = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Purchase_Return")]
public partial class Purchase_Return : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _PurchaseReturnID;
	
	private System.Nullable<System.DateTime> _Return_Date;
	
	private System.Nullable<decimal> _PurchaseID;
	
	private System.Nullable<decimal> _ReturnAmount;
	
	private System.Nullable<System.DateTime> _ReturnDate;
	
	private EntitySet<Purchase_Return_Invoice> _Purchase_Return_Invoices;
	
	private EntityRef<Purchase> _Purchase;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseReturnIDChanging(decimal value);
    partial void OnPurchaseReturnIDChanged();
    partial void OnReturn_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnReturn_DateChanged();
    partial void OnPurchaseIDChanging(System.Nullable<decimal> value);
    partial void OnPurchaseIDChanged();
    partial void OnReturnAmountChanging(System.Nullable<decimal> value);
    partial void OnReturnAmountChanged();
    partial void OnReturnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReturnDateChanged();
    #endregion
	
	public Purchase_Return()
	{
		this._Purchase_Return_Invoices = new EntitySet<Purchase_Return_Invoice>(new Action<Purchase_Return_Invoice>(this.attach_Purchase_Return_Invoices), new Action<Purchase_Return_Invoice>(this.detach_Purchase_Return_Invoices));
		this._Purchase = default(EntityRef<Purchase>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseReturnID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public decimal PurchaseReturnID
	{
		get
		{
			return this._PurchaseReturnID;
		}
		set
		{
			if ((this._PurchaseReturnID != value))
			{
				this.OnPurchaseReturnIDChanging(value);
				this.SendPropertyChanging();
				this._PurchaseReturnID = value;
				this.SendPropertyChanged("PurchaseReturnID");
				this.OnPurchaseReturnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Return Date]", Storage="_Return_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Return_Date
	{
		get
		{
			return this._Return_Date;
		}
		set
		{
			if ((this._Return_Date != value))
			{
				this.OnReturn_DateChanging(value);
				this.SendPropertyChanging();
				this._Return_Date = value;
				this.SendPropertyChanged("Return_Date");
				this.OnReturn_DateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseID", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> PurchaseID
	{
		get
		{
			return this._PurchaseID;
		}
		set
		{
			if ((this._PurchaseID != value))
			{
				if (this._Purchase.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPurchaseIDChanging(value);
				this.SendPropertyChanging();
				this._PurchaseID = value;
				this.SendPropertyChanged("PurchaseID");
				this.OnPurchaseIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnAmount", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> ReturnAmount
	{
		get
		{
			return this._ReturnAmount;
		}
		set
		{
			if ((this._ReturnAmount != value))
			{
				this.OnReturnAmountChanging(value);
				this.SendPropertyChanging();
				this._ReturnAmount = value;
				this.SendPropertyChanged("ReturnAmount");
				this.OnReturnAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnDate", DbType="Date")]
	public System.Nullable<System.DateTime> ReturnDate
	{
		get
		{
			return this._ReturnDate;
		}
		set
		{
			if ((this._ReturnDate != value))
			{
				this.OnReturnDateChanging(value);
				this.SendPropertyChanging();
				this._ReturnDate = value;
				this.SendPropertyChanged("ReturnDate");
				this.OnReturnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Purchase_Return_Purchase_Return_Invoice", Storage="_Purchase_Return_Invoices", ThisKey="PurchaseReturnID", OtherKey="PurchaseReturnID")]
	public EntitySet<Purchase_Return_Invoice> Purchase_Return_Invoices
	{
		get
		{
			return this._Purchase_Return_Invoices;
		}
		set
		{
			this._Purchase_Return_Invoices.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Purchase_Purchase_Return", Storage="_Purchase", ThisKey="PurchaseID", OtherKey="PurchaseID", IsForeignKey=true)]
	public Purchase Purchase
	{
		get
		{
			return this._Purchase.Entity;
		}
		set
		{
			Purchase previousValue = this._Purchase.Entity;
			if (((previousValue != value) 
						|| (this._Purchase.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Purchase.Entity = null;
					previousValue.Purchase_Returns.Remove(this);
				}
				this._Purchase.Entity = value;
				if ((value != null))
				{
					value.Purchase_Returns.Add(this);
					this._PurchaseID = value.PurchaseID;
				}
				else
				{
					this._PurchaseID = default(Nullable<decimal>);
				}
				this.SendPropertyChanged("Purchase");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Purchase_Return_Invoices(Purchase_Return_Invoice entity)
	{
		this.SendPropertyChanging();
		entity.Purchase_Return = this;
	}
	
	private void detach_Purchase_Return_Invoices(Purchase_Return_Invoice entity)
	{
		this.SendPropertyChanging();
		entity.Purchase_Return = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sales_Invoice")]
public partial class Sales_Invoice : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _sInvoiceID;
	
	private System.Nullable<System.DateTime> _sInvoiceDate;
	
	private System.Nullable<decimal> _Quantity;
	
	private System.Nullable<decimal> _Price;
	
	private System.Nullable<decimal> _SaleID;
	
	private EntityRef<Sale> _Sale;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsInvoiceIDChanging(decimal value);
    partial void OnsInvoiceIDChanged();
    partial void OnsInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnsInvoiceDateChanged();
    partial void OnQuantityChanging(System.Nullable<decimal> value);
    partial void OnQuantityChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnSaleIDChanging(System.Nullable<decimal> value);
    partial void OnSaleIDChanged();
    #endregion
	
	public Sales_Invoice()
	{
		this._Sale = default(EntityRef<Sale>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sInvoiceID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public decimal sInvoiceID
	{
		get
		{
			return this._sInvoiceID;
		}
		set
		{
			if ((this._sInvoiceID != value))
			{
				this.OnsInvoiceIDChanging(value);
				this.SendPropertyChanging();
				this._sInvoiceID = value;
				this.SendPropertyChanged("sInvoiceID");
				this.OnsInvoiceIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sInvoiceDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> sInvoiceDate
	{
		get
		{
			return this._sInvoiceDate;
		}
		set
		{
			if ((this._sInvoiceDate != value))
			{
				this.OnsInvoiceDateChanging(value);
				this.SendPropertyChanging();
				this._sInvoiceDate = value;
				this.SendPropertyChanged("sInvoiceDate");
				this.OnsInvoiceDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this.OnQuantityChanging(value);
				this.SendPropertyChanging();
				this._Quantity = value;
				this.SendPropertyChanged("Quantity");
				this.OnQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
	public System.Nullable<decimal> Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleID", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> SaleID
	{
		get
		{
			return this._SaleID;
		}
		set
		{
			if ((this._SaleID != value))
			{
				if (this._Sale.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSaleIDChanging(value);
				this.SendPropertyChanging();
				this._SaleID = value;
				this.SendPropertyChanged("SaleID");
				this.OnSaleIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sale_Sales_Invoice", Storage="_Sale", ThisKey="SaleID", OtherKey="SaleID", IsForeignKey=true)]
	public Sale Sale
	{
		get
		{
			return this._Sale.Entity;
		}
		set
		{
			Sale previousValue = this._Sale.Entity;
			if (((previousValue != value) 
						|| (this._Sale.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sale.Entity = null;
					previousValue.Sales_Invoices.Remove(this);
				}
				this._Sale.Entity = value;
				if ((value != null))
				{
					value.Sales_Invoices.Add(this);
					this._SaleID = value.SaleID;
				}
				else
				{
					this._SaleID = default(Nullable<decimal>);
				}
				this.SendPropertyChanged("Sale");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sales_Return_Invoice")]
public partial class Sales_Return_Invoice : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _srInvoice;
	
	private System.Nullable<System.DateTime> _srInvoiceDate;
	
	private System.Nullable<decimal> _Quantity;
	
	private System.Nullable<decimal> _Price;
	
	private System.Nullable<decimal> _SaleReturnID;
	
	private EntityRef<Sales_Return> _Sales_Return;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsrInvoiceChanging(decimal value);
    partial void OnsrInvoiceChanged();
    partial void OnsrInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnsrInvoiceDateChanged();
    partial void OnQuantityChanging(System.Nullable<decimal> value);
    partial void OnQuantityChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnSaleReturnIDChanging(System.Nullable<decimal> value);
    partial void OnSaleReturnIDChanged();
    #endregion
	
	public Sales_Return_Invoice()
	{
		this._Sales_Return = default(EntityRef<Sales_Return>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_srInvoice", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public decimal srInvoice
	{
		get
		{
			return this._srInvoice;
		}
		set
		{
			if ((this._srInvoice != value))
			{
				this.OnsrInvoiceChanging(value);
				this.SendPropertyChanging();
				this._srInvoice = value;
				this.SendPropertyChanged("srInvoice");
				this.OnsrInvoiceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_srInvoiceDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> srInvoiceDate
	{
		get
		{
			return this._srInvoiceDate;
		}
		set
		{
			if ((this._srInvoiceDate != value))
			{
				this.OnsrInvoiceDateChanging(value);
				this.SendPropertyChanging();
				this._srInvoiceDate = value;
				this.SendPropertyChanged("srInvoiceDate");
				this.OnsrInvoiceDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this.OnQuantityChanging(value);
				this.SendPropertyChanging();
				this._Quantity = value;
				this.SendPropertyChanged("Quantity");
				this.OnQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
	public System.Nullable<decimal> Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleReturnID", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> SaleReturnID
	{
		get
		{
			return this._SaleReturnID;
		}
		set
		{
			if ((this._SaleReturnID != value))
			{
				if (this._Sales_Return.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSaleReturnIDChanging(value);
				this.SendPropertyChanging();
				this._SaleReturnID = value;
				this.SendPropertyChanged("SaleReturnID");
				this.OnSaleReturnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sales_Return_Sales_Return_Invoice", Storage="_Sales_Return", ThisKey="SaleReturnID", OtherKey="SaleReturnID", IsForeignKey=true)]
	public Sales_Return Sales_Return
	{
		get
		{
			return this._Sales_Return.Entity;
		}
		set
		{
			Sales_Return previousValue = this._Sales_Return.Entity;
			if (((previousValue != value) 
						|| (this._Sales_Return.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Sales_Return.Entity = null;
					previousValue.Sales_Return_Invoices.Remove(this);
				}
				this._Sales_Return.Entity = value;
				if ((value != null))
				{
					value.Sales_Return_Invoices.Add(this);
					this._SaleReturnID = value.SaleReturnID;
				}
				else
				{
					this._SaleReturnID = default(Nullable<decimal>);
				}
				this.SendPropertyChanged("Sales_Return");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Order_by_Medical_Store_Per_Medicine")]
public partial class Order_by_Medical_Store_Per_Medicine : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _OrderIDMSPerMedicine;
	
	private System.Nullable<decimal> _Amount;
	
	private System.Nullable<decimal> _OrderIDByMS;
	
	private System.Nullable<decimal> _MedicineID;
	
	private string _ReturnStatus;
	
	private System.Nullable<System.DateTime> _ReturnDate;
	
	private System.Nullable<decimal> _ReturnAmount;
	
	private System.Nullable<decimal> _Discount;
	
	private System.Nullable<decimal> _DiscountAmount;
	
	private System.Nullable<decimal> _NetAmount;
	
	private System.Nullable<decimal> _ReturnNetAmount;
	
	private EntityRef<Order_By_Medical_Store> _Order_By_Medical_Store;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDMSPerMedicineChanging(decimal value);
    partial void OnOrderIDMSPerMedicineChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnOrderIDByMSChanging(System.Nullable<decimal> value);
    partial void OnOrderIDByMSChanged();
    partial void OnMedicineIDChanging(System.Nullable<decimal> value);
    partial void OnMedicineIDChanged();
    partial void OnReturnStatusChanging(string value);
    partial void OnReturnStatusChanged();
    partial void OnReturnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReturnDateChanged();
    partial void OnReturnAmountChanging(System.Nullable<decimal> value);
    partial void OnReturnAmountChanged();
    partial void OnDiscountChanging(System.Nullable<decimal> value);
    partial void OnDiscountChanged();
    partial void OnDiscountAmountChanging(System.Nullable<decimal> value);
    partial void OnDiscountAmountChanged();
    partial void OnNetAmountChanging(System.Nullable<decimal> value);
    partial void OnNetAmountChanged();
    partial void OnReturnNetAmountChanging(System.Nullable<decimal> value);
    partial void OnReturnNetAmountChanged();
    #endregion
	
	public Order_by_Medical_Store_Per_Medicine()
	{
		this._Order_By_Medical_Store = default(EntityRef<Order_By_Medical_Store>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderIDMSPerMedicine", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public decimal OrderIDMSPerMedicine
	{
		get
		{
			return this._OrderIDMSPerMedicine;
		}
		set
		{
			if ((this._OrderIDMSPerMedicine != value))
			{
				this.OnOrderIDMSPerMedicineChanging(value);
				this.SendPropertyChanging();
				this._OrderIDMSPerMedicine = value;
				this.SendPropertyChanged("OrderIDMSPerMedicine");
				this.OnOrderIDMSPerMedicineChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> Amount
	{
		get
		{
			return this._Amount;
		}
		set
		{
			if ((this._Amount != value))
			{
				this.OnAmountChanging(value);
				this.SendPropertyChanging();
				this._Amount = value;
				this.SendPropertyChanged("Amount");
				this.OnAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderIDByMS", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> OrderIDByMS
	{
		get
		{
			return this._OrderIDByMS;
		}
		set
		{
			if ((this._OrderIDByMS != value))
			{
				if (this._Order_By_Medical_Store.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnOrderIDByMSChanging(value);
				this.SendPropertyChanging();
				this._OrderIDByMS = value;
				this.SendPropertyChanged("OrderIDByMS");
				this.OnOrderIDByMSChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineID", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> MedicineID
	{
		get
		{
			return this._MedicineID;
		}
		set
		{
			if ((this._MedicineID != value))
			{
				this.OnMedicineIDChanging(value);
				this.SendPropertyChanging();
				this._MedicineID = value;
				this.SendPropertyChanged("MedicineID");
				this.OnMedicineIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnStatus", DbType="NChar(10)")]
	public string ReturnStatus
	{
		get
		{
			return this._ReturnStatus;
		}
		set
		{
			if ((this._ReturnStatus != value))
			{
				this.OnReturnStatusChanging(value);
				this.SendPropertyChanging();
				this._ReturnStatus = value;
				this.SendPropertyChanged("ReturnStatus");
				this.OnReturnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnDate", DbType="Date")]
	public System.Nullable<System.DateTime> ReturnDate
	{
		get
		{
			return this._ReturnDate;
		}
		set
		{
			if ((this._ReturnDate != value))
			{
				this.OnReturnDateChanging(value);
				this.SendPropertyChanging();
				this._ReturnDate = value;
				this.SendPropertyChanged("ReturnDate");
				this.OnReturnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnAmount", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> ReturnAmount
	{
		get
		{
			return this._ReturnAmount;
		}
		set
		{
			if ((this._ReturnAmount != value))
			{
				this.OnReturnAmountChanging(value);
				this.SendPropertyChanging();
				this._ReturnAmount = value;
				this.SendPropertyChanged("ReturnAmount");
				this.OnReturnAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> Discount
	{
		get
		{
			return this._Discount;
		}
		set
		{
			if ((this._Discount != value))
			{
				this.OnDiscountChanging(value);
				this.SendPropertyChanging();
				this._Discount = value;
				this.SendPropertyChanged("Discount");
				this.OnDiscountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmount", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> DiscountAmount
	{
		get
		{
			return this._DiscountAmount;
		}
		set
		{
			if ((this._DiscountAmount != value))
			{
				this.OnDiscountAmountChanging(value);
				this.SendPropertyChanging();
				this._DiscountAmount = value;
				this.SendPropertyChanged("DiscountAmount");
				this.OnDiscountAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetAmount", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> NetAmount
	{
		get
		{
			return this._NetAmount;
		}
		set
		{
			if ((this._NetAmount != value))
			{
				this.OnNetAmountChanging(value);
				this.SendPropertyChanging();
				this._NetAmount = value;
				this.SendPropertyChanged("NetAmount");
				this.OnNetAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnNetAmount", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> ReturnNetAmount
	{
		get
		{
			return this._ReturnNetAmount;
		}
		set
		{
			if ((this._ReturnNetAmount != value))
			{
				this.OnReturnNetAmountChanging(value);
				this.SendPropertyChanging();
				this._ReturnNetAmount = value;
				this.SendPropertyChanged("ReturnNetAmount");
				this.OnReturnNetAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_By_Medical_Store_Order_by_Medical_Store_Per_Medicine", Storage="_Order_By_Medical_Store", ThisKey="OrderIDByMS", OtherKey="OrderIDByMS", IsForeignKey=true)]
	public Order_By_Medical_Store Order_By_Medical_Store
	{
		get
		{
			return this._Order_By_Medical_Store.Entity;
		}
		set
		{
			Order_By_Medical_Store previousValue = this._Order_By_Medical_Store.Entity;
			if (((previousValue != value) 
						|| (this._Order_By_Medical_Store.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Order_By_Medical_Store.Entity = null;
					previousValue.Order_by_Medical_Store_Per_Medicines.Remove(this);
				}
				this._Order_By_Medical_Store.Entity = value;
				if ((value != null))
				{
					value.Order_by_Medical_Store_Per_Medicines.Add(this);
					this._OrderIDByMS = value.OrderIDByMS;
				}
				else
				{
					this._OrderIDByMS = default(Nullable<decimal>);
				}
				this.SendPropertyChanged("Order_By_Medical_Store");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Purchase_Invoice")]
public partial class Purchase_Invoice : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _pInvoiceID;
	
	private System.Nullable<System.DateTime> _pInvoiceDate;
	
	private System.Nullable<decimal> _Quantity;
	
	private System.Nullable<decimal> _Price;
	
	private System.Nullable<decimal> _PurchaseID;
	
	private EntityRef<Purchase> _Purchase;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpInvoiceIDChanging(decimal value);
    partial void OnpInvoiceIDChanged();
    partial void OnpInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnpInvoiceDateChanged();
    partial void OnQuantityChanging(System.Nullable<decimal> value);
    partial void OnQuantityChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnPurchaseIDChanging(System.Nullable<decimal> value);
    partial void OnPurchaseIDChanged();
    #endregion
	
	public Purchase_Invoice()
	{
		this._Purchase = default(EntityRef<Purchase>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pInvoiceID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public decimal pInvoiceID
	{
		get
		{
			return this._pInvoiceID;
		}
		set
		{
			if ((this._pInvoiceID != value))
			{
				this.OnpInvoiceIDChanging(value);
				this.SendPropertyChanging();
				this._pInvoiceID = value;
				this.SendPropertyChanged("pInvoiceID");
				this.OnpInvoiceIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pInvoiceDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> pInvoiceDate
	{
		get
		{
			return this._pInvoiceDate;
		}
		set
		{
			if ((this._pInvoiceDate != value))
			{
				this.OnpInvoiceDateChanging(value);
				this.SendPropertyChanging();
				this._pInvoiceDate = value;
				this.SendPropertyChanged("pInvoiceDate");
				this.OnpInvoiceDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this.OnQuantityChanging(value);
				this.SendPropertyChanging();
				this._Quantity = value;
				this.SendPropertyChanged("Quantity");
				this.OnQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
	public System.Nullable<decimal> Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseID", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> PurchaseID
	{
		get
		{
			return this._PurchaseID;
		}
		set
		{
			if ((this._PurchaseID != value))
			{
				if (this._Purchase.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPurchaseIDChanging(value);
				this.SendPropertyChanging();
				this._PurchaseID = value;
				this.SendPropertyChanged("PurchaseID");
				this.OnPurchaseIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Purchase_Purchase_Invoice", Storage="_Purchase", ThisKey="PurchaseID", OtherKey="PurchaseID", IsForeignKey=true)]
	public Purchase Purchase
	{
		get
		{
			return this._Purchase.Entity;
		}
		set
		{
			Purchase previousValue = this._Purchase.Entity;
			if (((previousValue != value) 
						|| (this._Purchase.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Purchase.Entity = null;
					previousValue.Purchase_Invoices.Remove(this);
				}
				this._Purchase.Entity = value;
				if ((value != null))
				{
					value.Purchase_Invoices.Add(this);
					this._PurchaseID = value.PurchaseID;
				}
				else
				{
					this._PurchaseID = default(Nullable<decimal>);
				}
				this.SendPropertyChanged("Purchase");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Order_To_Medicine_Company_Per_Medicine")]
public partial class Order_To_Medicine_Company_Per_Medicine : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _OrderIDMCPerMedicine;
	
	private System.Nullable<decimal> _OrderIDToMC;
	
	private System.Nullable<decimal> _Amount;
	
	private System.Nullable<decimal> _MedicineID;
	
	private string _ReturnStatus;
	
	private System.Nullable<System.DateTime> _ReturnDate;
	
	private System.Nullable<decimal> _ReturnAmount;
	
	private System.Nullable<decimal> _NetAmount;
	
	private System.Nullable<decimal> _ReturnNetAmount;
	
	private EntityRef<Order_To_Medicine_Company> _Order_To_Medicine_Company;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDMCPerMedicineChanging(decimal value);
    partial void OnOrderIDMCPerMedicineChanged();
    partial void OnOrderIDToMCChanging(System.Nullable<decimal> value);
    partial void OnOrderIDToMCChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnMedicineIDChanging(System.Nullable<decimal> value);
    partial void OnMedicineIDChanged();
    partial void OnReturnStatusChanging(string value);
    partial void OnReturnStatusChanged();
    partial void OnReturnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReturnDateChanged();
    partial void OnReturnAmountChanging(System.Nullable<decimal> value);
    partial void OnReturnAmountChanged();
    partial void OnNetAmountChanging(System.Nullable<decimal> value);
    partial void OnNetAmountChanged();
    partial void OnReturnNetAmountChanging(System.Nullable<decimal> value);
    partial void OnReturnNetAmountChanged();
    #endregion
	
	public Order_To_Medicine_Company_Per_Medicine()
	{
		this._Order_To_Medicine_Company = default(EntityRef<Order_To_Medicine_Company>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderIDMCPerMedicine", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public decimal OrderIDMCPerMedicine
	{
		get
		{
			return this._OrderIDMCPerMedicine;
		}
		set
		{
			if ((this._OrderIDMCPerMedicine != value))
			{
				this.OnOrderIDMCPerMedicineChanging(value);
				this.SendPropertyChanging();
				this._OrderIDMCPerMedicine = value;
				this.SendPropertyChanged("OrderIDMCPerMedicine");
				this.OnOrderIDMCPerMedicineChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderIDToMC", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> OrderIDToMC
	{
		get
		{
			return this._OrderIDToMC;
		}
		set
		{
			if ((this._OrderIDToMC != value))
			{
				if (this._Order_To_Medicine_Company.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnOrderIDToMCChanging(value);
				this.SendPropertyChanging();
				this._OrderIDToMC = value;
				this.SendPropertyChanged("OrderIDToMC");
				this.OnOrderIDToMCChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> Amount
	{
		get
		{
			return this._Amount;
		}
		set
		{
			if ((this._Amount != value))
			{
				this.OnAmountChanging(value);
				this.SendPropertyChanging();
				this._Amount = value;
				this.SendPropertyChanged("Amount");
				this.OnAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineID", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> MedicineID
	{
		get
		{
			return this._MedicineID;
		}
		set
		{
			if ((this._MedicineID != value))
			{
				this.OnMedicineIDChanging(value);
				this.SendPropertyChanging();
				this._MedicineID = value;
				this.SendPropertyChanged("MedicineID");
				this.OnMedicineIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnStatus", DbType="NChar(10)")]
	public string ReturnStatus
	{
		get
		{
			return this._ReturnStatus;
		}
		set
		{
			if ((this._ReturnStatus != value))
			{
				this.OnReturnStatusChanging(value);
				this.SendPropertyChanging();
				this._ReturnStatus = value;
				this.SendPropertyChanged("ReturnStatus");
				this.OnReturnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnDate", DbType="Date")]
	public System.Nullable<System.DateTime> ReturnDate
	{
		get
		{
			return this._ReturnDate;
		}
		set
		{
			if ((this._ReturnDate != value))
			{
				this.OnReturnDateChanging(value);
				this.SendPropertyChanging();
				this._ReturnDate = value;
				this.SendPropertyChanged("ReturnDate");
				this.OnReturnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnAmount", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> ReturnAmount
	{
		get
		{
			return this._ReturnAmount;
		}
		set
		{
			if ((this._ReturnAmount != value))
			{
				this.OnReturnAmountChanging(value);
				this.SendPropertyChanging();
				this._ReturnAmount = value;
				this.SendPropertyChanged("ReturnAmount");
				this.OnReturnAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetAmount", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> NetAmount
	{
		get
		{
			return this._NetAmount;
		}
		set
		{
			if ((this._NetAmount != value))
			{
				this.OnNetAmountChanging(value);
				this.SendPropertyChanging();
				this._NetAmount = value;
				this.SendPropertyChanged("NetAmount");
				this.OnNetAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnNetAmount", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> ReturnNetAmount
	{
		get
		{
			return this._ReturnNetAmount;
		}
		set
		{
			if ((this._ReturnNetAmount != value))
			{
				this.OnReturnNetAmountChanging(value);
				this.SendPropertyChanging();
				this._ReturnNetAmount = value;
				this.SendPropertyChanged("ReturnNetAmount");
				this.OnReturnNetAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_To_Medicine_Company_Order_To_Medicine_Company_Per_Medicine", Storage="_Order_To_Medicine_Company", ThisKey="OrderIDToMC", OtherKey="OrderIDToMC", IsForeignKey=true)]
	public Order_To_Medicine_Company Order_To_Medicine_Company
	{
		get
		{
			return this._Order_To_Medicine_Company.Entity;
		}
		set
		{
			Order_To_Medicine_Company previousValue = this._Order_To_Medicine_Company.Entity;
			if (((previousValue != value) 
						|| (this._Order_To_Medicine_Company.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Order_To_Medicine_Company.Entity = null;
					previousValue.Order_To_Medicine_Company_Per_Medicines.Remove(this);
				}
				this._Order_To_Medicine_Company.Entity = value;
				if ((value != null))
				{
					value.Order_To_Medicine_Company_Per_Medicines.Add(this);
					this._OrderIDToMC = value.OrderIDToMC;
				}
				else
				{
					this._OrderIDToMC = default(Nullable<decimal>);
				}
				this.SendPropertyChanged("Order_To_Medicine_Company");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Purchase_Return_Invoice")]
public partial class Purchase_Return_Invoice : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _prInvoice;
	
	private System.Nullable<System.DateTime> _prInvoiceDate;
	
	private System.Nullable<decimal> _Quantity;
	
	private System.Nullable<decimal> _Price;
	
	private System.Nullable<decimal> _PurchaseReturnID;
	
	private EntityRef<Purchase_Return> _Purchase_Return;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprInvoiceChanging(decimal value);
    partial void OnprInvoiceChanged();
    partial void OnprInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnprInvoiceDateChanged();
    partial void OnQuantityChanging(System.Nullable<decimal> value);
    partial void OnQuantityChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnPurchaseReturnIDChanging(System.Nullable<decimal> value);
    partial void OnPurchaseReturnIDChanged();
    #endregion
	
	public Purchase_Return_Invoice()
	{
		this._Purchase_Return = default(EntityRef<Purchase_Return>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prInvoice", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public decimal prInvoice
	{
		get
		{
			return this._prInvoice;
		}
		set
		{
			if ((this._prInvoice != value))
			{
				this.OnprInvoiceChanging(value);
				this.SendPropertyChanging();
				this._prInvoice = value;
				this.SendPropertyChanged("prInvoice");
				this.OnprInvoiceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prInvoiceDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> prInvoiceDate
	{
		get
		{
			return this._prInvoiceDate;
		}
		set
		{
			if ((this._prInvoiceDate != value))
			{
				this.OnprInvoiceDateChanging(value);
				this.SendPropertyChanging();
				this._prInvoiceDate = value;
				this.SendPropertyChanged("prInvoiceDate");
				this.OnprInvoiceDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this.OnQuantityChanging(value);
				this.SendPropertyChanging();
				this._Quantity = value;
				this.SendPropertyChanged("Quantity");
				this.OnQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
	public System.Nullable<decimal> Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseReturnID", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> PurchaseReturnID
	{
		get
		{
			return this._PurchaseReturnID;
		}
		set
		{
			if ((this._PurchaseReturnID != value))
			{
				if (this._Purchase_Return.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPurchaseReturnIDChanging(value);
				this.SendPropertyChanging();
				this._PurchaseReturnID = value;
				this.SendPropertyChanged("PurchaseReturnID");
				this.OnPurchaseReturnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Purchase_Return_Purchase_Return_Invoice", Storage="_Purchase_Return", ThisKey="PurchaseReturnID", OtherKey="PurchaseReturnID", IsForeignKey=true)]
	public Purchase_Return Purchase_Return
	{
		get
		{
			return this._Purchase_Return.Entity;
		}
		set
		{
			Purchase_Return previousValue = this._Purchase_Return.Entity;
			if (((previousValue != value) 
						|| (this._Purchase_Return.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Purchase_Return.Entity = null;
					previousValue.Purchase_Return_Invoices.Remove(this);
				}
				this._Purchase_Return.Entity = value;
				if ((value != null))
				{
					value.Purchase_Return_Invoices.Add(this);
					this._PurchaseReturnID = value.PurchaseReturnID;
				}
				else
				{
					this._PurchaseReturnID = default(Nullable<decimal>);
				}
				this.SendPropertyChanged("Purchase_Return");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Notifications")]
public partial class Notification : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _NotificationId;
	
	private string _Message;
	
	private System.Nullable<int> _UserID;
	
	private string _Type;
	
	private string _Status;
	
	private System.Nullable<decimal> _OrderNumber;
	
	private EntityRef<User> _User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNotificationIdChanging(int value);
    partial void OnNotificationIdChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnOrderNumberChanging(System.Nullable<decimal> value);
    partial void OnOrderNumberChanged();
    #endregion
	
	public Notification()
	{
		this._User = default(EntityRef<User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int NotificationId
	{
		get
		{
			return this._NotificationId;
		}
		set
		{
			if ((this._NotificationId != value))
			{
				this.OnNotificationIdChanging(value);
				this.SendPropertyChanging();
				this._NotificationId = value;
				this.SendPropertyChanged("NotificationId");
				this.OnNotificationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Message
	{
		get
		{
			return this._Message;
		}
		set
		{
			if ((this._Message != value))
			{
				this.OnMessageChanging(value);
				this.SendPropertyChanging();
				this._Message = value;
				this.SendPropertyChanged("Message");
				this.OnMessageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
	public System.Nullable<int> UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
	public string Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NChar(10)")]
	public string Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNumber", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> OrderNumber
	{
		get
		{
			return this._OrderNumber;
		}
		set
		{
			if ((this._OrderNumber != value))
			{
				this.OnOrderNumberChanging(value);
				this.SendPropertyChanging();
				this._OrderNumber = value;
				this.SendPropertyChanged("OrderNumber");
				this.OnOrderNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Notification", Storage="_User", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true)]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.Notifications.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.Notifications.Add(this);
					this._UserID = value.UserId;
				}
				else
				{
					this._UserID = default(Nullable<int>);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Transaction]")]
public partial class Transaction : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<decimal> _Order_;
	
	private string _Type;
	
	private System.Nullable<System.DateTime> _Date;
	
	private System.Nullable<System.DateTime> _Time;
	
	private string _Client_Supplier;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOrder_Changing(System.Nullable<decimal> value);
    partial void OnOrder_Changed();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeChanged();
    partial void OnClient_SupplierChanging(string value);
    partial void OnClient_SupplierChanged();
    #endregion
	
	public Transaction()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Order#", Storage="_Order_", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> Order_
	{
		get
		{
			return this._Order_;
		}
		set
		{
			if ((this._Order_ != value))
			{
				this.OnOrder_Changing(value);
				this.SendPropertyChanging();
				this._Order_ = value;
				this.SendPropertyChanged("Order_");
				this.OnOrder_Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
	public string Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime")]
	public System.Nullable<System.DateTime> Time
	{
		get
		{
			return this._Time;
		}
		set
		{
			if ((this._Time != value))
			{
				this.OnTimeChanging(value);
				this.SendPropertyChanging();
				this._Time = value;
				this.SendPropertyChanged("Time");
				this.OnTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Client/Supplier]", Storage="_Client_Supplier", DbType="NVarChar(50)")]
	public string Client_Supplier
	{
		get
		{
			return this._Client_Supplier;
		}
		set
		{
			if ((this._Client_Supplier != value))
			{
				this.OnClient_SupplierChanging(value);
				this.SendPropertyChanging();
				this._Client_Supplier = value;
				this.SendPropertyChanged("Client_Supplier");
				this.OnClient_SupplierChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Order_By_Medical_Store")]
public partial class Order_By_Medical_Store : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _OrderIDByMS;
	
	private System.Nullable<System.DateTime> _Due_Date;
	
	private string _Status;
	
	private System.Nullable<decimal> _MedicalStoreID;
	
	private System.Nullable<System.DateTime> _Order_Date;
	
	private string _Placed_By;
	
	private string _Recieved_By;
	
	private System.Nullable<System.DateTime> _Delivered_Date;
	
	private EntitySet<Sale> _Sales;
	
	private EntitySet<Order_by_Medical_Store_Per_Medicine> _Order_by_Medical_Store_Per_Medicines;
	
	private EntityRef<Medical_Store> _Medical_Store;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDByMSChanging(decimal value);
    partial void OnOrderIDByMSChanged();
    partial void OnDue_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnDue_DateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnMedicalStoreIDChanging(System.Nullable<decimal> value);
    partial void OnMedicalStoreIDChanged();
    partial void OnOrder_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnOrder_DateChanged();
    partial void OnPlaced_ByChanging(string value);
    partial void OnPlaced_ByChanged();
    partial void OnRecieved_ByChanging(string value);
    partial void OnRecieved_ByChanged();
    partial void OnDelivered_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnDelivered_DateChanged();
    #endregion
	
	public Order_By_Medical_Store()
	{
		this._Sales = new EntitySet<Sale>(new Action<Sale>(this.attach_Sales), new Action<Sale>(this.detach_Sales));
		this._Order_by_Medical_Store_Per_Medicines = new EntitySet<Order_by_Medical_Store_Per_Medicine>(new Action<Order_by_Medical_Store_Per_Medicine>(this.attach_Order_by_Medical_Store_Per_Medicines), new Action<Order_by_Medical_Store_Per_Medicine>(this.detach_Order_by_Medical_Store_Per_Medicines));
		this._Medical_Store = default(EntityRef<Medical_Store>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderIDByMS", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public decimal OrderIDByMS
	{
		get
		{
			return this._OrderIDByMS;
		}
		set
		{
			if ((this._OrderIDByMS != value))
			{
				this.OnOrderIDByMSChanging(value);
				this.SendPropertyChanging();
				this._OrderIDByMS = value;
				this.SendPropertyChanged("OrderIDByMS");
				this.OnOrderIDByMSChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Due Date]", Storage="_Due_Date", DbType="Date")]
	public System.Nullable<System.DateTime> Due_Date
	{
		get
		{
			return this._Due_Date;
		}
		set
		{
			if ((this._Due_Date != value))
			{
				this.OnDue_DateChanging(value);
				this.SendPropertyChanging();
				this._Due_Date = value;
				this.SendPropertyChanged("Due_Date");
				this.OnDue_DateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
	public string Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalStoreID", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> MedicalStoreID
	{
		get
		{
			return this._MedicalStoreID;
		}
		set
		{
			if ((this._MedicalStoreID != value))
			{
				if (this._Medical_Store.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMedicalStoreIDChanging(value);
				this.SendPropertyChanging();
				this._MedicalStoreID = value;
				this.SendPropertyChanged("MedicalStoreID");
				this.OnMedicalStoreIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Order Date]", Storage="_Order_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Order_Date
	{
		get
		{
			return this._Order_Date;
		}
		set
		{
			if ((this._Order_Date != value))
			{
				this.OnOrder_DateChanging(value);
				this.SendPropertyChanging();
				this._Order_Date = value;
				this.SendPropertyChanged("Order_Date");
				this.OnOrder_DateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Placed By]", Storage="_Placed_By", DbType="NVarChar(50)")]
	public string Placed_By
	{
		get
		{
			return this._Placed_By;
		}
		set
		{
			if ((this._Placed_By != value))
			{
				this.OnPlaced_ByChanging(value);
				this.SendPropertyChanging();
				this._Placed_By = value;
				this.SendPropertyChanged("Placed_By");
				this.OnPlaced_ByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Recieved By]", Storage="_Recieved_By", DbType="NVarChar(50)")]
	public string Recieved_By
	{
		get
		{
			return this._Recieved_By;
		}
		set
		{
			if ((this._Recieved_By != value))
			{
				this.OnRecieved_ByChanging(value);
				this.SendPropertyChanging();
				this._Recieved_By = value;
				this.SendPropertyChanged("Recieved_By");
				this.OnRecieved_ByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Delivered Date]", Storage="_Delivered_Date", DbType="Date")]
	public System.Nullable<System.DateTime> Delivered_Date
	{
		get
		{
			return this._Delivered_Date;
		}
		set
		{
			if ((this._Delivered_Date != value))
			{
				this.OnDelivered_DateChanging(value);
				this.SendPropertyChanging();
				this._Delivered_Date = value;
				this.SendPropertyChanged("Delivered_Date");
				this.OnDelivered_DateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_By_Medical_Store_Sale", Storage="_Sales", ThisKey="OrderIDByMS", OtherKey="OrderIDByMS")]
	public EntitySet<Sale> Sales
	{
		get
		{
			return this._Sales;
		}
		set
		{
			this._Sales.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_By_Medical_Store_Order_by_Medical_Store_Per_Medicine", Storage="_Order_by_Medical_Store_Per_Medicines", ThisKey="OrderIDByMS", OtherKey="OrderIDByMS")]
	public EntitySet<Order_by_Medical_Store_Per_Medicine> Order_by_Medical_Store_Per_Medicines
	{
		get
		{
			return this._Order_by_Medical_Store_Per_Medicines;
		}
		set
		{
			this._Order_by_Medical_Store_Per_Medicines.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Medical_Store_Order_By_Medical_Store", Storage="_Medical_Store", ThisKey="MedicalStoreID", OtherKey="MedicalStoreID", IsForeignKey=true)]
	public Medical_Store Medical_Store
	{
		get
		{
			return this._Medical_Store.Entity;
		}
		set
		{
			Medical_Store previousValue = this._Medical_Store.Entity;
			if (((previousValue != value) 
						|| (this._Medical_Store.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Medical_Store.Entity = null;
					previousValue.Order_By_Medical_Stores.Remove(this);
				}
				this._Medical_Store.Entity = value;
				if ((value != null))
				{
					value.Order_By_Medical_Stores.Add(this);
					this._MedicalStoreID = value.MedicalStoreID;
				}
				else
				{
					this._MedicalStoreID = default(Nullable<decimal>);
				}
				this.SendPropertyChanged("Medical_Store");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Sales(Sale entity)
	{
		this.SendPropertyChanging();
		entity.Order_By_Medical_Store = this;
	}
	
	private void detach_Sales(Sale entity)
	{
		this.SendPropertyChanging();
		entity.Order_By_Medical_Store = null;
	}
	
	private void attach_Order_by_Medical_Store_Per_Medicines(Order_by_Medical_Store_Per_Medicine entity)
	{
		this.SendPropertyChanging();
		entity.Order_By_Medical_Store = this;
	}
	
	private void detach_Order_by_Medical_Store_Per_Medicines(Order_by_Medical_Store_Per_Medicine entity)
	{
		this.SendPropertyChanging();
		entity.Order_By_Medical_Store = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Chart")]
public partial class Chart : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _MedicalStoreName;
	
	private System.Nullable<decimal> _Sum;
	
	private System.Nullable<System.DateTime> _Date;
	
	private string _Month;
	
	private System.Nullable<int> _Year;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMedicalStoreNameChanging(string value);
    partial void OnMedicalStoreNameChanged();
    partial void OnSumChanging(System.Nullable<decimal> value);
    partial void OnSumChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnMonthChanging(string value);
    partial void OnMonthChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    #endregion
	
	public Chart()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalStoreName", DbType="NVarChar(50)")]
	public string MedicalStoreName
	{
		get
		{
			return this._MedicalStoreName;
		}
		set
		{
			if ((this._MedicalStoreName != value))
			{
				this.OnMedicalStoreNameChanging(value);
				this.SendPropertyChanging();
				this._MedicalStoreName = value;
				this.SendPropertyChanged("MedicalStoreName");
				this.OnMedicalStoreNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sum", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> Sum
	{
		get
		{
			return this._Sum;
		}
		set
		{
			if ((this._Sum != value))
			{
				this.OnSumChanging(value);
				this.SendPropertyChanging();
				this._Sum = value;
				this.SendPropertyChanged("Sum");
				this.OnSumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
	public System.Nullable<System.DateTime> Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="NChar(10)")]
	public string Month
	{
		get
		{
			return this._Month;
		}
		set
		{
			if ((this._Month != value))
			{
				this.OnMonthChanging(value);
				this.SendPropertyChanging();
				this._Month = value;
				this.SendPropertyChanged("Month");
				this.OnMonthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
	public System.Nullable<int> Year
	{
		get
		{
			return this._Year;
		}
		set
		{
			if ((this._Year != value))
			{
				this.OnYearChanging(value);
				this.SendPropertyChanging();
				this._Year = value;
				this.SendPropertyChanged("Year");
				this.OnYearChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Medicine_Company")]
public partial class Medicine_Company : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _MedicineCompanyID;
	
	private string _MedicineCompanyName;
	
	private string _Phone;
	
	private string _Address;
	
	private string _Email;
	
	private string _Fax;
	
	private string _AlternativePhone;
	
	private string _AlternativeEmail;
	
	private EntitySet<Order_To_Medicine_Company> _Order_To_Medicine_Companies;
	
	private EntitySet<Medicine_In_Stock> _Medicine_In_Stocks;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMedicineCompanyIDChanging(decimal value);
    partial void OnMedicineCompanyIDChanged();
    partial void OnMedicineCompanyNameChanging(string value);
    partial void OnMedicineCompanyNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnAlternativePhoneChanging(string value);
    partial void OnAlternativePhoneChanged();
    partial void OnAlternativeEmailChanging(string value);
    partial void OnAlternativeEmailChanged();
    #endregion
	
	public Medicine_Company()
	{
		this._Order_To_Medicine_Companies = new EntitySet<Order_To_Medicine_Company>(new Action<Order_To_Medicine_Company>(this.attach_Order_To_Medicine_Companies), new Action<Order_To_Medicine_Company>(this.detach_Order_To_Medicine_Companies));
		this._Medicine_In_Stocks = new EntitySet<Medicine_In_Stock>(new Action<Medicine_In_Stock>(this.attach_Medicine_In_Stocks), new Action<Medicine_In_Stock>(this.detach_Medicine_In_Stocks));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineCompanyID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public decimal MedicineCompanyID
	{
		get
		{
			return this._MedicineCompanyID;
		}
		set
		{
			if ((this._MedicineCompanyID != value))
			{
				this.OnMedicineCompanyIDChanging(value);
				this.SendPropertyChanging();
				this._MedicineCompanyID = value;
				this.SendPropertyChanged("MedicineCompanyID");
				this.OnMedicineCompanyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineCompanyName", DbType="NVarChar(50)")]
	public string MedicineCompanyName
	{
		get
		{
			return this._MedicineCompanyName;
		}
		set
		{
			if ((this._MedicineCompanyName != value))
			{
				this.OnMedicineCompanyNameChanging(value);
				this.SendPropertyChanging();
				this._MedicineCompanyName = value;
				this.SendPropertyChanged("MedicineCompanyName");
				this.OnMedicineCompanyNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50)")]
	public string Fax
	{
		get
		{
			return this._Fax;
		}
		set
		{
			if ((this._Fax != value))
			{
				this.OnFaxChanging(value);
				this.SendPropertyChanging();
				this._Fax = value;
				this.SendPropertyChanged("Fax");
				this.OnFaxChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternativePhone", DbType="NVarChar(50)")]
	public string AlternativePhone
	{
		get
		{
			return this._AlternativePhone;
		}
		set
		{
			if ((this._AlternativePhone != value))
			{
				this.OnAlternativePhoneChanging(value);
				this.SendPropertyChanging();
				this._AlternativePhone = value;
				this.SendPropertyChanged("AlternativePhone");
				this.OnAlternativePhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternativeEmail", DbType="NVarChar(50)")]
	public string AlternativeEmail
	{
		get
		{
			return this._AlternativeEmail;
		}
		set
		{
			if ((this._AlternativeEmail != value))
			{
				this.OnAlternativeEmailChanging(value);
				this.SendPropertyChanging();
				this._AlternativeEmail = value;
				this.SendPropertyChanged("AlternativeEmail");
				this.OnAlternativeEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Medicine_Company_Order_To_Medicine_Company", Storage="_Order_To_Medicine_Companies", ThisKey="MedicineCompanyID", OtherKey="MedicineCompanyID")]
	public EntitySet<Order_To_Medicine_Company> Order_To_Medicine_Companies
	{
		get
		{
			return this._Order_To_Medicine_Companies;
		}
		set
		{
			this._Order_To_Medicine_Companies.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Medicine_Company_Medicine_In_Stock", Storage="_Medicine_In_Stocks", ThisKey="MedicineCompanyID", OtherKey="MedicineCompanyID")]
	public EntitySet<Medicine_In_Stock> Medicine_In_Stocks
	{
		get
		{
			return this._Medicine_In_Stocks;
		}
		set
		{
			this._Medicine_In_Stocks.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Order_To_Medicine_Companies(Order_To_Medicine_Company entity)
	{
		this.SendPropertyChanging();
		entity.Medicine_Company = this;
	}
	
	private void detach_Order_To_Medicine_Companies(Order_To_Medicine_Company entity)
	{
		this.SendPropertyChanging();
		entity.Medicine_Company = null;
	}
	
	private void attach_Medicine_In_Stocks(Medicine_In_Stock entity)
	{
		this.SendPropertyChanging();
		entity.Medicine_Company = this;
	}
	
	private void detach_Medicine_In_Stocks(Medicine_In_Stock entity)
	{
		this.SendPropertyChanging();
		entity.Medicine_Company = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Medical_Store")]
public partial class Medical_Store : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _MedicalStoreID;
	
	private string _MedicalStoreName;
	
	private string _Phone;
	
	private string _Address;
	
	private string _Email;
	
	private string _Alternative_Email;
	
	private string _Alternative_Phone;
	
	private string _Fax;
	
	private EntitySet<Order_By_Medical_Store> _Order_By_Medical_Stores;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMedicalStoreIDChanging(decimal value);
    partial void OnMedicalStoreIDChanged();
    partial void OnMedicalStoreNameChanging(string value);
    partial void OnMedicalStoreNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAlternative_EmailChanging(string value);
    partial void OnAlternative_EmailChanged();
    partial void OnAlternative_PhoneChanging(string value);
    partial void OnAlternative_PhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    #endregion
	
	public Medical_Store()
	{
		this._Order_By_Medical_Stores = new EntitySet<Order_By_Medical_Store>(new Action<Order_By_Medical_Store>(this.attach_Order_By_Medical_Stores), new Action<Order_By_Medical_Store>(this.detach_Order_By_Medical_Stores));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalStoreID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public decimal MedicalStoreID
	{
		get
		{
			return this._MedicalStoreID;
		}
		set
		{
			if ((this._MedicalStoreID != value))
			{
				this.OnMedicalStoreIDChanging(value);
				this.SendPropertyChanging();
				this._MedicalStoreID = value;
				this.SendPropertyChanged("MedicalStoreID");
				this.OnMedicalStoreIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalStoreName", DbType="NVarChar(50)")]
	public string MedicalStoreName
	{
		get
		{
			return this._MedicalStoreName;
		}
		set
		{
			if ((this._MedicalStoreName != value))
			{
				this.OnMedicalStoreNameChanging(value);
				this.SendPropertyChanging();
				this._MedicalStoreName = value;
				this.SendPropertyChanged("MedicalStoreName");
				this.OnMedicalStoreNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alternative_Email", DbType="NVarChar(50)")]
	public string Alternative_Email
	{
		get
		{
			return this._Alternative_Email;
		}
		set
		{
			if ((this._Alternative_Email != value))
			{
				this.OnAlternative_EmailChanging(value);
				this.SendPropertyChanging();
				this._Alternative_Email = value;
				this.SendPropertyChanged("Alternative_Email");
				this.OnAlternative_EmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alternative_Phone", DbType="NVarChar(50)")]
	public string Alternative_Phone
	{
		get
		{
			return this._Alternative_Phone;
		}
		set
		{
			if ((this._Alternative_Phone != value))
			{
				this.OnAlternative_PhoneChanging(value);
				this.SendPropertyChanging();
				this._Alternative_Phone = value;
				this.SendPropertyChanged("Alternative_Phone");
				this.OnAlternative_PhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50)")]
	public string Fax
	{
		get
		{
			return this._Fax;
		}
		set
		{
			if ((this._Fax != value))
			{
				this.OnFaxChanging(value);
				this.SendPropertyChanging();
				this._Fax = value;
				this.SendPropertyChanged("Fax");
				this.OnFaxChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Medical_Store_Order_By_Medical_Store", Storage="_Order_By_Medical_Stores", ThisKey="MedicalStoreID", OtherKey="MedicalStoreID")]
	public EntitySet<Order_By_Medical_Store> Order_By_Medical_Stores
	{
		get
		{
			return this._Order_By_Medical_Stores;
		}
		set
		{
			this._Order_By_Medical_Stores.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Order_By_Medical_Stores(Order_By_Medical_Store entity)
	{
		this.SendPropertyChanging();
		entity.Medical_Store = this;
	}
	
	private void detach_Order_By_Medical_Stores(Order_By_Medical_Store entity)
	{
		this.SendPropertyChanging();
		entity.Medical_Store = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Medicine_In_Stock")]
public partial class Medicine_In_Stock : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private decimal _MedicineID;
	
	private string _MedicineName;
	
	private System.Nullable<decimal> _Amount;
	
	private System.Nullable<decimal> _Price;
	
	private System.Nullable<System.DateTime> _ManufactureDate;
	
	private System.Nullable<System.DateTime> _ExpiryDate;
	
	private System.Nullable<decimal> _MedicineCompanyID;
	
	private System.Nullable<decimal> _MedicineCategoryID;
	
	private string _BatchNo;
	
	private string _PackSize;
	
	private string _Description;
	
	private string _Image;
	
	private EntityRef<Medicine_Category> _Medicine_Category;
	
	private EntityRef<Medicine_Company> _Medicine_Company;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMedicineIDChanging(decimal value);
    partial void OnMedicineIDChanged();
    partial void OnMedicineNameChanging(string value);
    partial void OnMedicineNameChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnManufactureDateChanging(System.Nullable<System.DateTime> value);
    partial void OnManufactureDateChanged();
    partial void OnExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiryDateChanged();
    partial void OnMedicineCompanyIDChanging(System.Nullable<decimal> value);
    partial void OnMedicineCompanyIDChanged();
    partial void OnMedicineCategoryIDChanging(System.Nullable<decimal> value);
    partial void OnMedicineCategoryIDChanged();
    partial void OnBatchNoChanging(string value);
    partial void OnBatchNoChanged();
    partial void OnPackSizeChanging(string value);
    partial void OnPackSizeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    #endregion
	
	public Medicine_In_Stock()
	{
		this._Medicine_Category = default(EntityRef<Medicine_Category>);
		this._Medicine_Company = default(EntityRef<Medicine_Company>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public decimal MedicineID
	{
		get
		{
			return this._MedicineID;
		}
		set
		{
			if ((this._MedicineID != value))
			{
				this.OnMedicineIDChanging(value);
				this.SendPropertyChanging();
				this._MedicineID = value;
				this.SendPropertyChanged("MedicineID");
				this.OnMedicineIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineName", DbType="NVarChar(50)")]
	public string MedicineName
	{
		get
		{
			return this._MedicineName;
		}
		set
		{
			if ((this._MedicineName != value))
			{
				this.OnMedicineNameChanging(value);
				this.SendPropertyChanging();
				this._MedicineName = value;
				this.SendPropertyChanged("MedicineName");
				this.OnMedicineNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> Amount
	{
		get
		{
			return this._Amount;
		}
		set
		{
			if ((this._Amount != value))
			{
				this.OnAmountChanging(value);
				this.SendPropertyChanging();
				this._Amount = value;
				this.SendPropertyChanged("Amount");
				this.OnAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufactureDate", DbType="Date")]
	public System.Nullable<System.DateTime> ManufactureDate
	{
		get
		{
			return this._ManufactureDate;
		}
		set
		{
			if ((this._ManufactureDate != value))
			{
				this.OnManufactureDateChanging(value);
				this.SendPropertyChanging();
				this._ManufactureDate = value;
				this.SendPropertyChanged("ManufactureDate");
				this.OnManufactureDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="Date")]
	public System.Nullable<System.DateTime> ExpiryDate
	{
		get
		{
			return this._ExpiryDate;
		}
		set
		{
			if ((this._ExpiryDate != value))
			{
				this.OnExpiryDateChanging(value);
				this.SendPropertyChanging();
				this._ExpiryDate = value;
				this.SendPropertyChanged("ExpiryDate");
				this.OnExpiryDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineCompanyID", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> MedicineCompanyID
	{
		get
		{
			return this._MedicineCompanyID;
		}
		set
		{
			if ((this._MedicineCompanyID != value))
			{
				if (this._Medicine_Company.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMedicineCompanyIDChanging(value);
				this.SendPropertyChanging();
				this._MedicineCompanyID = value;
				this.SendPropertyChanged("MedicineCompanyID");
				this.OnMedicineCompanyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineCategoryID", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> MedicineCategoryID
	{
		get
		{
			return this._MedicineCategoryID;
		}
		set
		{
			if ((this._MedicineCategoryID != value))
			{
				if (this._Medicine_Category.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMedicineCategoryIDChanging(value);
				this.SendPropertyChanging();
				this._MedicineCategoryID = value;
				this.SendPropertyChanged("MedicineCategoryID");
				this.OnMedicineCategoryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchNo", DbType="NVarChar(50)")]
	public string BatchNo
	{
		get
		{
			return this._BatchNo;
		}
		set
		{
			if ((this._BatchNo != value))
			{
				this.OnBatchNoChanging(value);
				this.SendPropertyChanging();
				this._BatchNo = value;
				this.SendPropertyChanged("BatchNo");
				this.OnBatchNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackSize", DbType="NChar(10)")]
	public string PackSize
	{
		get
		{
			return this._PackSize;
		}
		set
		{
			if ((this._PackSize != value))
			{
				this.OnPackSizeChanging(value);
				this.SendPropertyChanging();
				this._PackSize = value;
				this.SendPropertyChanged("PackSize");
				this.OnPackSizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(200)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Medicine_Category_Medicine_In_Stock", Storage="_Medicine_Category", ThisKey="MedicineCategoryID", OtherKey="MedicineCategoryID", IsForeignKey=true, DeleteRule="CASCADE")]
	public Medicine_Category Medicine_Category
	{
		get
		{
			return this._Medicine_Category.Entity;
		}
		set
		{
			Medicine_Category previousValue = this._Medicine_Category.Entity;
			if (((previousValue != value) 
						|| (this._Medicine_Category.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Medicine_Category.Entity = null;
					previousValue.Medicine_In_Stocks.Remove(this);
				}
				this._Medicine_Category.Entity = value;
				if ((value != null))
				{
					value.Medicine_In_Stocks.Add(this);
					this._MedicineCategoryID = value.MedicineCategoryID;
				}
				else
				{
					this._MedicineCategoryID = default(Nullable<decimal>);
				}
				this.SendPropertyChanged("Medicine_Category");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Medicine_Company_Medicine_In_Stock", Storage="_Medicine_Company", ThisKey="MedicineCompanyID", OtherKey="MedicineCompanyID", IsForeignKey=true)]
	public Medicine_Company Medicine_Company
	{
		get
		{
			return this._Medicine_Company.Entity;
		}
		set
		{
			Medicine_Company previousValue = this._Medicine_Company.Entity;
			if (((previousValue != value) 
						|| (this._Medicine_Company.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Medicine_Company.Entity = null;
					previousValue.Medicine_In_Stocks.Remove(this);
				}
				this._Medicine_Company.Entity = value;
				if ((value != null))
				{
					value.Medicine_In_Stocks.Add(this);
					this._MedicineCompanyID = value.MedicineCompanyID;
				}
				else
				{
					this._MedicineCompanyID = default(Nullable<decimal>);
				}
				this.SendPropertyChanged("Medicine_Company");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class GetMedicineCategoryResult
{
	
	private decimal _MedicineCategoryID;
	
	private string _MedicineCategoryName;
	
	public GetMedicineCategoryResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineCategoryID", DbType="Decimal(18,0) NOT NULL")]
	public decimal MedicineCategoryID
	{
		get
		{
			return this._MedicineCategoryID;
		}
		set
		{
			if ((this._MedicineCategoryID != value))
			{
				this._MedicineCategoryID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineCategoryName", DbType="NVarChar(50)")]
	public string MedicineCategoryName
	{
		get
		{
			return this._MedicineCategoryName;
		}
		set
		{
			if ((this._MedicineCategoryName != value))
			{
				this._MedicineCategoryName = value;
			}
		}
	}
}

public partial class Insert_UserResult
{
	
	private int _Column1;
	
	public Insert_UserResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int NOT NULL")]
	public int Column1
	{
		get
		{
			return this._Column1;
		}
		set
		{
			if ((this._Column1 != value))
			{
				this._Column1 = value;
			}
		}
	}
}

public partial class GetMedicineResult
{
	
	private decimal _MedicineID;
	
	private string _BatchNo;
	
	private string _MedicineName;
	
	private System.Nullable<decimal> _Amount;
	
	private System.Nullable<decimal> _Price;
	
	private System.Nullable<System.DateTime> _ExpiryDate;
	
	private System.Nullable<System.DateTime> _ManufactureDate;
	
	private string _MedicineCategoryName;
	
	private string _MedicineCompanyName;
	
	public GetMedicineResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineID", DbType="Decimal(18,0) NOT NULL")]
	public decimal MedicineID
	{
		get
		{
			return this._MedicineID;
		}
		set
		{
			if ((this._MedicineID != value))
			{
				this._MedicineID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchNo", DbType="NVarChar(50)")]
	public string BatchNo
	{
		get
		{
			return this._BatchNo;
		}
		set
		{
			if ((this._BatchNo != value))
			{
				this._BatchNo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineName", DbType="NVarChar(50)")]
	public string MedicineName
	{
		get
		{
			return this._MedicineName;
		}
		set
		{
			if ((this._MedicineName != value))
			{
				this._MedicineName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> Amount
	{
		get
		{
			return this._Amount;
		}
		set
		{
			if ((this._Amount != value))
			{
				this._Amount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
	public System.Nullable<decimal> Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this._Price = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="Date")]
	public System.Nullable<System.DateTime> ExpiryDate
	{
		get
		{
			return this._ExpiryDate;
		}
		set
		{
			if ((this._ExpiryDate != value))
			{
				this._ExpiryDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufactureDate", DbType="Date")]
	public System.Nullable<System.DateTime> ManufactureDate
	{
		get
		{
			return this._ManufactureDate;
		}
		set
		{
			if ((this._ManufactureDate != value))
			{
				this._ManufactureDate = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineCategoryName", DbType="NVarChar(50)")]
	public string MedicineCategoryName
	{
		get
		{
			return this._MedicineCategoryName;
		}
		set
		{
			if ((this._MedicineCategoryName != value))
			{
				this._MedicineCategoryName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicineCompanyName", DbType="NVarChar(50)")]
	public string MedicineCompanyName
	{
		get
		{
			return this._MedicineCompanyName;
		}
		set
		{
			if ((this._MedicineCompanyName != value))
			{
				this._MedicineCompanyName = value;
			}
		}
	}
}
#pragma warning restore 1591
